[
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerRequestController",
    "Method": "deleteRequest",
    "RelativePath": "api/employerrequests/deleteRequest/{ApplicantId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ApplicantId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerRequestController",
    "Method": "fetchRequest",
    "RelativePath": "api/employerrequests/fetchRequest/{ApplicantId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ApplicantId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Employerrequest",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerRequestController",
    "Method": "fetchRequests",
    "RelativePath": "api/employerrequests/fetchRequests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Employerrequest",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerRequestController",
    "Method": "postRequest",
    "RelativePath": "api/employerrequests/postRequest",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "createRequestDto",
        "Type": "ProjektBackend.Controllers.CreateRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerController",
    "Method": "deleteEmployer",
    "RelativePath": "api/employers/deleteEmployer/{EmployerId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "EmployerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerController",
    "Method": "editEmployer",
    "RelativePath": "api/employers/editEmployer/{EmployerId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "EmployerId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateEmployerDto",
        "Type": "ProjektBackend.Controllers.UpdateEmployerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerController",
    "Method": "fetchEmployer",
    "RelativePath": "api/employers/fetchEmployer/{EmployerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "EmployerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Employer",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerController",
    "Method": "fetchEmployers",
    "RelativePath": "api/employers/fetchEmployers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Employer",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.EmployerController",
    "Method": "postEmployer",
    "RelativePath": "api/employers/postEmployer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "createEmployerDto",
        "Type": "ProjektBackend.Controllers.CreateEmployerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ProjektBackend.Controllers.PostController",
    "Method": "DeletePost",
    "RelativePath": "api/posts/deletePost/{PostId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PostId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "EmployerId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ProjektBackend.Controllers.PostController",
    "Method": "editPost",
    "RelativePath": "api/posts/editPost/{PostId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PostId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "EmployerId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "updatePostDto",
        "Type": "ProjektBackend.Controllers.UpdatePostDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Post",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.PostController",
    "Method": "fetchPost",
    "RelativePath": "api/posts/fetchPost/{PostId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PostId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Post",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.PostController",
    "Method": "fetchPosts",
    "RelativePath": "api/posts/fetchPosts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Post",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.PostController",
    "Method": "newPost",
    "RelativePath": "api/posts/newPost",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "EmployerId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "createPostDto",
        "Type": "ProjektBackend.Controllers.CreatePostDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Post",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.ProfileController",
    "Method": "postProfile",
    "RelativePath": "api/profiles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "createProfileDto",
        "Type": "ProjektBackend.Controllers.CreateProfileDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Profile",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.ProfileController",
    "Method": "updateProfile",
    "RelativePath": "api/profiles/updateProfile/{ProfileId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ProfileId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateProfileDto",
        "Type": "ProjektBackend.Controllers.UpdateProfileDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.Profile",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.UserController",
    "Method": "deleteUser",
    "RelativePath": "api/users/deleteUser",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ProjektBackend.Controllers.UserController",
    "Method": "fetchUser",
    "RelativePath": "api/users/fetchUser/{UserId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.UserController",
    "Method": "fetchUsers",
    "RelativePath": "api/users/fetchUsers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.UserController",
    "Method": "loginUser",
    "RelativePath": "api/users/loginUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginUserDto",
        "Type": "ProjektBackend.Controllers.LoginUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ProjektBackend.Controllers.UserController",
    "Method": "registerUser",
    "RelativePath": "api/users/registerUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerUserDto",
        "Type": "ProjektBackend.Controllers.RegisterUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ProjektBackend.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]